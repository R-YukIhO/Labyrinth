#define M 8 
#define N 8 
#include<stdio.h>
int mg[M+2][N+2]=       //建立该全局数组提供给函数使用，后续将准备副本为复原使用 
{
  {1,1,1,1,1,1,1,1,1,1},
  {1,0,1,0,1,1,0,0,0,1},
  {1,0,1,0,0,1,0,1,0,1},
  {1,0,0,0,0,0,0,1,0,1},
  {1,1,0,1,1,1,0,1,0,1},
  {1,0,0,0,1,0,1,1,0,1},
  {1,1,1,0,1,0,0,0,1,1},
  {1,0,1,0,0,0,1,0,0,1},
  {1,0,0,0,1,1,0,1,0,1},
  {1,1,1,1,1,1,1,1,1,1},
};
int mgre[M+2][N+2]=     //副本 
{
  {1,1,1,1,1,1,1,1,1,1},
  {1,0,1,0,1,1,0,0,0,1},
  {1,0,1,0,0,1,0,1,0,1},
  {1,0,0,0,0,0,0,1,0,1},
  {1,1,0,1,1,1,0,1,0,1},
  {1,0,0,0,1,0,1,1,0,1},
  {1,1,1,0,1,0,0,0,1,1},
  {1,0,1,0,0,0,1,0,0,1},
  {1,0,0,0,1,1,0,1,0,1},
  {1,1,1,1,1,1,1,1,1,1},
};
void recover(int a,int b)    //复原迷宫 
{
	for(int i=0;i<a;i++)
	{
	  for(int j=0;j<b;j++)
	  {
	  	mg[i][j]=mgre[i][j];
	  }
    }
} 
void recover2(int a,int b)   //修改迷宫，路变墙，墙变路 
{
	for(int i=1;i<a;i++)
	{
	  for(int j=1;j<b;j++)
	  {
	  	if(mg[i][j]==1)
	  	mg[i][j]=0;
	    else
		if(mg[i][j]==0) 
		mg[i][j]=1; 
	  }
    }
} 
void DisplayLab(int a,int b)
{
	for(int i=0;i<a;i++)
	{
	  for(int j=0;j<b;j++)
	  {
	  	if(mg[i][j]==1)
	  	printf("■"); 
		if(mg[i][j]==0) 
		printf("  "); 
	  }
	  printf("\n");
    }
}
int main()
{
	DisplayLab(M+2,N+2);
	recover2(M+1,N+1);
	printf("\n");
	DisplayLab(M+2,N+2);
	recover(M+2,N+2);
	printf("\n");
	DisplayLab(M+2,N+2);
}
